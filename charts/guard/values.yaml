# ---- Envoy Gateway ----
gateway:
  enabled: true
  gatewayClassName: envoy-gateway-class
  listeners:
    # Envoy Gateway will listen for HTTP requests on port 3070.
    - name: http
      protocol: HTTP
      port: 3070

# ---- Global settings ----
# Domain is the base domain for subdomain matching.
# For Example:  
# - ethereum: eth.path.grove.city -> "target-service-id: F00C"
# - polygon: polygon.path.grove.city -> "target-service-id: F021"

# domain: path.grove.city  # TODO_IN_THIS_PR: Set back to this for deployment Base domain for subdomain matching
domain: localhost # TODO_IN_THIS_PR: Remove this line

# namespace is the namespace that both Envoy Gateway and the PATH service are deployed to.
namespace: path-local # TODO_IN_THIS_PR: Set this to the final namespace we will use for deployment

# serviceName is the name of the service that the PATH service is deployed to.
serviceName: path-http # TODO_IN_THIS_PR: Set this to the final service name we will use for deployment

# Port is the port that the PATH service runs on in the cluster.
# This is the port that Envoy Gateway will forward requests to.
port: 3069

# ---- Service routing settings ----

# List of services that will be routed by Envoy Gateway
# to the PATH backend. These services will be used to 
# construct HTTPRoutes for each service. These HTTPRoutes
# are used to assign the "target-service-id" header to the 
# request based on the subdomain service alias.
# - serviceId [REQUIRED]: The authorative service ID of the service.
# - aliases [OPTIONAL]: A list of aliases for the service.
#
# For example:
# - F00C.path.grove.city -> "target-service-id: F00C"
# - eth.path.grove.city -> "target-service-id: F00C"
# - polygon.path.grove.city -> "target-service-id: F021"
services:
  - serviceId: anvil
  # - serviceId: F00C
  #   aliases: 
  #     - eth
  #     - eth-mainnet
  # - serviceId: F021
  #   aliases: 
  #     - polygon
  #     - polygon-mainnet

# Add other services here ...
