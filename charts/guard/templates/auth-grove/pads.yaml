# PATH Auth Data Server (PADS) Helm Chart
# Used as part of the Grove legacy authorization flow.
#
# ######### VERY IMPORTANT #########
# If you are not authorizing Grove Portal requests,
# this is VERY unlikely to fit your exact use-case.
#
# A gRPC server that provides Gateway Endpoint data from a configurable data source
# to the Go External Authorization Server, enabling authorization for the PATH Gateway.
#
# Data sources can include:
#   - YAML files
#   - Postgres databases
#
# Github Repo: https://github.com/buildwithgrove/path-auth-data-server
{{- if .Values.auth.groveLegacy.enabled }}
{{- $name := include "guard-helm.fullname" . }}
{{- $padsConfig:= .Values.auth.groveLegacy.pads }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{$name}}-pads
  namespace: {{ $.Values.global.namespace }}
  labels:
    {{- include "guard-helm.labels" $ | nindent 4 }}
spec:
  replicas: {{ $padsConfig.replicas }}
  selector:
    matchLabels:
      app: {{$name}}-pads
  template:
    metadata:
      labels:
        {{- include "guard-helm.labels" $ | nindent 8 }}
        app: {{$name}}-pads
    spec:
      containers:
      - name: path-auth-data-server
        image: ghcr.io/buildwithgrove/path-auth-data-server:latest
        imagePullPolicy: IfNotPresent
        {{- with $padsConfig.envFrom }}
        envFrom: {{- toYaml . | nindent 10}}
        {{- end }}
        {{- with $padsConfig.env }}
        env: {{- toYaml . | nindent 10}}
        {{- end }}
        ports:
        - containerPort: {{ $padsConfig.port }}
        volumeMounts:
          - name: {{$name}}-data
            mountPath: {{ $padsConfig.mountPath }}
      volumes:
      {{- if $padsConfig.fromSecret }}
      - name: {{$name}}-data
        secret:
          secretName: {{ $padsConfig.fromSecret.secretName }}
      {{- else }}
      - name: {{$name}}-data
        configMap:
          name: pads-data
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{$name}}-pads
  namespace: {{ $.Values.global.namespace }}
  labels:
    {{- include "guard-helm.labels" $ | nindent 4 }}
spec:
  selector:
    app: {{$name}}-pads
  ports:
  - port: {{ $padsConfig.port }}
    targetPort: {{ $padsConfig.port }}
    protocol: TCP
    name: grpc
---
{{- if not $padsConfig.fromSecret }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: pads-data
  namespace: {{ $.Values.global.namespace }}
data: {{- toYaml $padsConfig.configMap | nindent 4 }}
{{- end }}
---
{{- if $padsConfig.fromSecret }}
# ExternalSecret for PADS Postgres connection
# # - Creates a K8s Secret from GCP Secret Manager
# # - Includes DB connection string and SSL certificates
# # - Secret name controlled by fromSecret.secretName
# # - Used by PADS container for secure DB connection
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $padsConfig.fromSecret.externalSecretName | default "pads-db-connection" }}
  namespace: {{ $.Values.global.namespace }}
spec:
  data:
  - secretKey: {{ $padsConfig.fromSecret.postgresConnectionVarName | default "POSTGRES_CONNECTION_STRING" }}
    remoteRef:
      conversionStrategy: {{ $padsConfig.fromSecret.conversionStrategy | default "Default" }}
      decodingStrategy: {{ $padsConfig.fromSecret.decodingStrategy | default "None" }}
      key: {{ $padsConfig.fromSecret.keyPrefix | default "guard-pads-db-connection" }}-{{ $.Values.global.environment | default "prod" }}
      property: POSTGRES_CONNECTION_STRING
  - secretKey: ssl_cert.pem
    remoteRef:
      conversionStrategy: {{ $padsConfig.fromSecret.conversionStrategy | default "Default" }}
      decodingStrategy: {{ $padsConfig.fromSecret.decodingStrategy | default "None" }}
      key: {{ $padsConfig.fromSecret.keyPrefix | default "guard-pads-db-connection" }}-{{ $.Values.global.environment | default "prod" }}
      property: ssl_cert.pem
  - secretKey: ssl_key.pem
    remoteRef:
      conversionStrategy: {{ $padsConfig.fromSecret.conversionStrategy | default "Default" }}
      decodingStrategy: {{ $padsConfig.fromSecret.decodingStrategy | default "None" }}
      key: {{ $padsConfig.fromSecret.keyPrefix | default "guard-pads-db-connection" }}-{{ $.Values.global.environment | default "prod" }}
      property: ssl_key.pem
  - secretKey: ssl_root_cert.pem
    remoteRef:
      conversionStrategy: {{ $padsConfig.fromSecret.conversionStrategy | default "Default" }}
      decodingStrategy: {{ $padsConfig.fromSecret.decodingStrategy | default "None" }}
      key: {{ $padsConfig.fromSecret.keyPrefix | default "guard-pads-db-connection" }}-{{ $.Values.global.environment | default "prod" }}
      property: ssl_root_cert.pem
  refreshInterval: {{ $padsConfig.fromSecret.refreshInterval | default "5s" }}
  secretStoreRef:
    kind: SecretStore
    name: {{ $padsConfig.fromSecret.secretStore | default "secstore-portal-gcp-secrets" }}
  target:
    creationPolicy: {{ $padsConfig.fromSecret.creationPolicy | default "Owner" }}
    deletionPolicy: {{ $padsConfig.fromSecret.deletionPolicy | default "Retain" }}
    name: {{ $padsConfig.fromSecret.secretName | default "pads-db-connection" }}
{{- end }}

{{- end }}
