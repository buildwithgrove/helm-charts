# ######### VERY IMPORTANT #########
# If you are not authorizing Grove Portal requests,
# this is VERY unlikely to fit your exact use-case.
#
# PATH External Authorization Server (PEAS) Helm Chart
# Used as part of the Grove legacy authorization flow.
#
# Github Repo: 
#   - https://github.com/buildwithgrove/path-external-auth-server
#
# PEAS is external authorization server designed to authorize requests to the PATH Gateway.
# This exists due to unique needs for authorizing Portal Apps in the Grove Portal that
# could not be handled by out-of-the-box Envoy Gateway functionality, hence the need for
# a custom authorization server implementation.
#
# Key characteristics:
#   - Uses gRPC for communication
#   - Adheres to the specification expected by the Envoy External Authorization HTTP Filter
#
# References:
#   - Envoy Gateway External Authorization:
#     https://gateway.envoyproxy.io/docs/tasks/security/ext-auth/
#   - Envoy Proxy External Authorization Filter:
#     https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/ext_authz_filter
{{- if .Values.auth.groveLegacy.enabled }}
{{- $name:= include "guard-helm.fullname" . }}
{{- $peasConfig:= .Values.auth.groveLegacy.peas }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{$name}}-peas
  namespace: {{ $.Values.global.namespace }}
spec:
  replicas: {{ $peasConfig.replicas }}
  selector:
    matchLabels:
      app: {{$name}}-peas
  template:
    metadata:
      labels:
        {{- include "guard-helm.labels" $ | nindent 8 }}
        app: {{$name}}-peas
    spec:
      containers:
      - name: path-external-auth-server
        image: ghcr.io/buildwithgrove/path-external-auth-server:{{ default "latest" $peasConfig.imageTag }}
        imagePullPolicy: IfNotPresent
        env: {{- toYaml $peasConfig.env | nindent 10 }}
        ports:
        - containerPort: {{ $peasConfig.port }}
        volumeMounts:
          - name: {{$name}}-data
            mountPath: {{ $peasConfig.mountPath }}
      volumes:
      {{- if $peasConfig.fromSecret }}
      - name: {{$name}}-data
        secret:
          secretName: {{ $peasConfig.fromSecret.secretName }}
      {{- else }}
      - name: {{$name}}-data
        configMap:
          name: peas-data
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{$name}}-peas
  namespace: {{ $.Values.global.namespace }}
spec:
  selector:
    app: {{$name}}-peas
  ports:
  - port: {{ $peasConfig.port }}
    targetPort: {{ $peasConfig.port }}
    protocol: TCP
    name: grpc
---
{{- if not $peasConfig.fromSecret }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: peas-data
  namespace: {{ $.Values.global.namespace }}
data: {{- toYaml $peasConfig.configMap | nindent 4 }}
{{- end }}

{{- end }}
